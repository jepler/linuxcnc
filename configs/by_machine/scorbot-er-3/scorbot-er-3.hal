
loadrt [KINS]KINEMATICS
#autoconverted  scorbot-kins

# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS

# standard components
#loadrt pid num_chan=3

# hostmot2 driver
# if you have any firmware trouble, enable the debug flags here and see what's going on in the syslog
#loadrt hostmot2 debug_idrom=1 debug_module_descriptors=1 debug_pin_descriptors=1 debug_modules=1
#loadrt hostmot2

# load low-level driver
#loadrt [HOSTMOT2](DRIVER) config=[HOSTMOT2](CONFIG)

loadrt differential


#addf hm2_[HOSTMOT2](BOARD).0.read          servo-thread
addf motion-command-handler                servo-thread
addf motion-controller                     servo-thread
addf differential.0                        servo-thread
#addf pid.0.do-pid-calcs                    servo-thread
#addf pid.1.do-pid-calcs                    servo-thread
#addf pid.2.do-pid-calcs                    servo-thread
#addf hm2_[HOSTMOT2](BOARD).0.write         servo-thread

loadusr -W scorbot-er-3


#
# E-Stop
#

net estop-loop iocontrol.0.user-enable-out => iocontrol.0.emc-enable-in


#
# Joint 0
#

net j0.cmd <= joint.0.motor-pos-cmd
net j0.cmd => scorbot-er-3.joint0.motor-pos-cmd
net j0.cmd => joint.0.motor-pos-fb

net j0.limit <= scorbot-er-3.joint0.limit-sw
net j0.limit => joint.0.home-sw-in
net j0.limit => joint.0.neg-lim-sw-in
net j0.limit => joint.0.pos-lim-sw-in

setp scorbot-er-3.joint0.scale [JOINT_0]SCALE

#setp  hm2_[HOSTMOT2](BOARD).0.encoder.01.scale  [JOINT_1]INPUT_SCALE
#net motor.01.pos-fb hm2_[HOSTMOT2](BOARD).0.encoder.01.position => pid.1.feedback
#net motor.01.pos-fb => joint.1.motor-pos-fb #push copy back to Axis GUI

#newsig emcmot.01.enable bit
#sets emcmot.01.enable FALSE
#net emcmot.01.enable => pid.1.enable
#net emcmot.01.enable => hm2_[HOSTMOT2](BOARD).0.pwmgen.01.enable
#net emcmot.01.enable <= joint.1.amp-enable-out

# encoder feedback
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.counter-mode 0
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.filter 1
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.index-invert 0
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.index-mask 0
#setp hm2_[HOSTMOT2](BOARD).0.encoder.01.index-mask-invert 0

#setp  hm2_[HOSTMOT2](BOARD).0.encoder.01.scale  [JOINT_1]INPUT_SCALE
#net motor.01.pos-fb hm2_[HOSTMOT2](BOARD).0.encoder.01.position => pid.1.feedback
#net motor.01.pos-fb => joint.1.motor-pos-fb #push copy back to Axis GUI

# set PID loop gains from inifile
#setp pid.1.Pgain [JOINT_1]P
#setp pid.1.Igain [JOINT_1]I
#setp pid.1.Dgain [JOINT_1]D
#setp pid.1.bias [JOINT_1]BIAS
#setp pid.1.FF0 [JOINT_1]FF0
#setp pid.1.FF1 [JOINT_1]FF1
#setp pid.1.FF2 [JOINT_1]FF2
#setp pid.1.deadband [JOINT_1]DEADBAND
#setp pid.1.maxoutput [JOINT_1]MAX_OUTPUT

# position command signals
#setp hm2_[HOSTMOT2](BOARD).0.pwmgen.01.output-type 1 #pwm on pin1, dir on pin2
#setp hm2_[HOSTMOT2](BOARD).0.pwmgen.01.scale [JOINT_1]OUTPUT_SCALE

#net emcmot.01.pos-cmd joint.1.motor-pos-cmd => pid.1.command
#net motor.01.command  pid.1.output  =>  hm2_[HOSTMOT2](BOARD).0.pwmgen.01.value


#
# Joint 1
#

net j1.cmd <= joint.1.motor-pos-cmd
net j1.cmd => scorbot-er-3.joint1.motor-pos-cmd
net j1.cmd => joint.1.motor-pos-fb

net j1.limit <= scorbot-er-3.joint1.limit-sw
net j1.limit => joint.1.home-sw-in
net j1.limit => joint.1.neg-lim-sw-in
net j1.limit => joint.1.pos-lim-sw-in

setp scorbot-er-3.joint1.scale [JOINT_1]SCALE


#
# Joint 2
#

net j2.cmd <= joint.2.motor-pos-cmd
net j2.cmd => scorbot-er-3.joint2.motor-pos-cmd
net j2.cmd => joint.2.motor-pos-fb

net j2.limit <= scorbot-er-3.joint2.limit-sw
net j2.limit => joint.2.home-sw-in
net j2.limit => joint.2.neg-lim-sw-in
net j2.limit => joint.2.pos-lim-sw-in

setp scorbot-er-3.joint2.scale [JOINT_2]SCALE


#
# Joint 3
#

net wrist-pitch.cmd <= joint.3.motor-pos-cmd
net wrist-pitch.cmd => differential.0.pitch
net wrist-pitch.cmd => joint.3.motor-pos-fb

net j3.cmd <= differential.0.motor0
net j3.cmd => scorbot-er-3.joint3.motor-pos-cmd

net wrist-pitch.limit <= scorbot-er-3.joint3.limit-sw
net wrist-pitch.limit => joint.3.home-sw-in

setp scorbot-er-3.joint3.scale [JOINT_3]SCALE


#
# Joint 4
#

net wrist-roll.cmd <= joint.4.motor-pos-cmd
net wrist-roll.cmd => differential.0.roll
net wrist-roll.cmd => joint.4.motor-pos-fb

net j4.cmd <= differential.0.motor1
net j4.cmd => scorbot-er-3.joint4.motor-pos-cmd

net wrist-roll.limit <= scorbot-er-3.joint4.limit-sw
net wrist-roll.limit => joint.4.home-sw-in

setp scorbot-er-3.joint4.scale [JOINT_4]SCALE


#
# Joint 5
#

#net j5.cmd <= joint.5.motor-pos-cmd
#net j5.cmd => scorbot-er-3.joint5.motor-pos-cmd
#net j5.cmd => joint.5.motor-pos-fb

#net j5.limit <= scorbot-er-3.joint5.limit-sw
#net j5.limit => joint.5.home-sw-in
#net j5.limit => joint.5.neg-lim-sw-in
#net j5.limit => joint.5.pos-lim-sw-in

#setp scorbot-er-3.joint5.scale [JOINT_5]SCALE


#
# Joint 6
#

#net j6.cmd <= joint.6.motor-pos-cmd
#net j6.cmd => scorbot-er-3.joint6.motor-pos-cmd
#net j6.cmd => joint.6.motor-pos-fb

#net j6.limit <= scorbot-er-3.joint6.limit-sw
#net j6.limit => joint.6.home-sw-in
#net j6.limit => joint.6.neg-lim-sw-in
#net j6.limit => joint.6.pos-lim-sw-in

#setp scorbot-er-3.joint6.scale [JOINT_6]SCALE


#
# Joint 7
#

#net j7.cmd <= joint.7.motor-pos-cmd
#net j7.cmd => scorbot-er-3.joint7.motor-pos-cmd
#net j7.cmd => joint.7.motor-pos-fb

#net j7.limit <= scorbot-er-3.joint7.limit-sw
#net j7.limit => joint.7.home-sw-in
#net j7.limit => joint.7.neg-lim-sw-in
#net j7.limit => joint.7.pos-lim-sw-in

#setp scorbot-er-3.joint7.scale [JOINT_7]SCALE
